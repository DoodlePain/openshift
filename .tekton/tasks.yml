apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: output
  namespace: sn-labs-manuelfrullo
spec:
  params: []
  workspaces:
    - name: output
      optional: false
  tasks:
    - name: cleanup
      taskRef:
        kind: Task
        name: cleanup
      workspaces:
        - name: source
          workspace: output

    - name: git-clone
      runAfter:
        - cleanup
      taskRef:
        kind: Task
        name: git-clone
      params:
        - name: url
          value: 'https://github.com/DoodlePain/openshift.git'
        - name: revision
          value: ''
        - name: refspec
          value: ''
        - name: submodules
          value: 'true'
        - name: depth
          value: '1'
        - name: sslVerify
          value: 'true'
        - name: crtFileName
          value: ca-bundle.crt
        - name: subdirectory
          value: ''
        - name: sparseCheckoutDirectories
          value: ''
        - name: deleteExisting
          value: 'true'
        - name: httpProxy
          value: ''
        - name: httpsProxy
          value: ''
        - name: noProxy
          value: ''
        - name: verbose
          value: 'true'
        - name: gitInitImage
          value: 'gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.40.2'
        - name: userHome
          value: /home/git
      workspaces:
        - name: output
          workspace: output

    - name: flake8
      runAfter:
        - git-clone
      taskRef:
        kind: Task
        name: flake8
      params:
        - name: image
          value: 'docker.io/alpine/flake8@sha256:bb280bf2af4a434be912f25bbcb6c79ea4d735ed3c8e259f96c405998920871f'
        - name: path
          value: .
        - name: requirements_file
          value: requirements.txt
        - name: args
          value: []
      workspaces:
        - name: source
          workspace: output

    - name: nose
      runAfter:
        - flake8
      taskRef:
        kind: Task
        name: nose
      params:
        - name: args
          value: '-v'
      workspaces:
        - name: source
          workspace: output

  finally:
    - name: buildah
      taskRef:
        kind: Task
        name: buildah
      params:
        - name: IMAGE
          value: 'docker.io/your-username/your-image:latest' # Replace with your image reference
        - name: BUILDER_IMAGE
          value: 'quay.io/buildah/stable:v1'
        - name: STORAGE_DRIVER
          value: overlay
        - name: DOCKERFILE
          value: ./Dockerfile
        - name: CONTEXT
          value: .
        - name: TLSVERIFY
          value: 'true'
        - name: FORMAT
          value: oci
        - name: BUILD_EXTRA_ARGS
          value: ''
        - name: PUSH_EXTRA_ARGS
          value: ''
        - name: SKIP_PUSH
          value: 'false'
        - name: BUILD_ARGS
          value:
            - ''

    - name: deploy
      taskRef:
        kind: Task
        name: deploy
      params:
        - name: app-name
          value: 'your-app-name' # Replace with your application name
        - name: build-image
          value: 'docker.io/your-username/your-image:latest' # Replace with your image reference
      workspaces:
        - name: source
          workspace: output